(function(global){"use strict";var isFunction=function(obj){return Object.prototype.toString.call(obj)==="[object Function]"},eachPair=function(obj,callback){Object.keys(obj).forEach(function(key){callback(key,obj[key])})},numerals={one:1,two:2,three:3,four:4,five:5,six:6,seven:7,eight:8,nine:9,ten:10,twenty:20,fifty:50,hundred:100,thousand:1e3},extend=function(obj){return Array.prototype.slice.call(arguments,1).forEach(function(source){for(var prop in source)obj[prop]=source[prop]}),obj},unitsMap=function(){var byName={};return[{ms:1,names:["millis","ms","milliseconds","millisecond"]},{ms:1e3,names:["s","sec","secs","seconds","second"]},{ms:6e4,names:["m","min","mins","minutes","minute"]},{ms:36e5,names:["h","hours","hour"]}].forEach(function(unit){unit.names.forEach(function(name){byName[name]=unit.ms})}),byName}(),withUnitArgs=function(func){return function(val,unit){if(unit&&!unitsMap[unit])throw new Error('Unknown unit "'+unit+'" must be one of ['+Object.keys(unitsMap).join(", ")+"]");return func.call(func,unit&&unitsMap[unit]*val||val)}},chained=function(instance,func){return function(){return func.apply(func,arguments),instance}};function Repeat(task){var opts,timer,tick,results=[],tickCount=0,started=!1,completed=!1,deferred=Repeat.defer(),self=extend({},deferred.promise());return opts={task:task||null,every:-1,times:-1,for_:-1,until:null,if_:null},self.task=chained(self,function(task){opts.task=task}),self.every=chained(self,withUnitArgs(function(ms){opts.every=ms})),self["for"]=self.lasting=chained(self,withUnitArgs(function(ms){opts.for_=ms})),self["if"]=self.provided=chained(self,function(func){opts.if_=func}),self.unless=chained(self,function(func){opts.if_=function(){return!func()}}),self["while"]=self.during=chained(self,function(func){opts.until=function(){return!func()}}),self.times=chained(self,function(times){opts.times=times}),self.until=chained(self,function(func){opts.until=func}),tick=chained(self,function(){var result,mute=!1,done=function(result){results.push(result),mute||deferred.notify(result),~opts.every&&(timer=setTimeout(tick,opts.every))},skip=isFunction(opts.if_)&&!opts.if_();if(completed)return;started||(started=+(new Date));if(isFunction(opts.until)&&opts.until())self.cancel();else if(~opts.for_&&+(new Date)-started>opts.for_)self.cancel();else if(~opts.times&&tickCount===opts.times)self.cancel();else{var scope={mute:function(){mute=!0}};if(opts.task.length>0){if(!skip)try{opts.task.call(scope,done)}catch(e){throw deferred.reject(e),e}tickCount++}else{if(!skip)try{result=opts.task.call(scope)}catch(e){throw deferred.reject(e),e}tickCount++,done(result)}}}),self.start=function(){if(started)throw new Error("Already started");if(!opts.task)throw new Error("Don't know any task to run");if(!isFunction(opts.task))throw new Error("Uh oh, the given task is not a function");if(~opts.every)setTimeout(function(){tick()},0);else do tick();while(!completed);return deferred.promise()},self.start["in"]=self["in"]=self.wait=withUnitArgs(function(ms){return timer=setTimeout(function(){self.start()},ms),deferred.promise()}),self.next=chained(self,function(){tick()}),self.stop=chained(self,function(){started||self.cancel(),opts.times=tickCount+1}),self.cancel=chained(self,function(){timer&&clearTimeout(timer),deferred.resolve(results),completed=!0}),self.async=chained(self,function(){return self.every(0,"ms")}),eachPair(numerals,function(key,value){self[key]={times:function(){return self.times(value),self}}}),self.once=self.one.time=self.one.times,self.twice=self.two.times,self.now=self.start.now=self.start,self}Repeat.defer=global.jQuery?function(){return new global.jQuery.Deferred}:global.Deferred?function(){return global.Deferred()}:null,typeof exports!="undefined"?module.exports=Repeat:global.Repeat=Repeat})(this);